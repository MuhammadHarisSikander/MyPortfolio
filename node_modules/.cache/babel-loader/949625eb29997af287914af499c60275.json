{"ast":null,"code":"const SYSTEM_PROPS = {\n  mt: \"marginTop\",\n  mb: \"marginBottom\",\n  ml: \"marginLeft\",\n  mr: \"marginRight\",\n  pt: \"paddingTop\",\n  pb: \"paddingBottom\",\n  pl: \"paddingLeft\",\n  pr: \"paddingRight\"\n};\nconst NEGATIVE_VALUES = [\"-xs\", \"-sm\", \"-md\", \"-lg\", \"-xl\"];\n\nfunction isValidSizeValue(margin) {\n  return typeof margin === \"string\" || typeof margin === \"number\";\n}\n\nfunction getSizeValue(margin, theme) {\n  if (NEGATIVE_VALUES.includes(margin)) {\n    return theme.fn.size({\n      size: margin.replace(\"-\", \"\"),\n      sizes: theme.spacing\n    }) * -1;\n  }\n\n  return theme.fn.size({\n    size: margin,\n    sizes: theme.spacing\n  });\n}\n\nfunction getSystemStyles(systemStyles, theme) {\n  const styles = {};\n\n  if (isValidSizeValue(systemStyles.p)) {\n    const value = getSizeValue(systemStyles.p, theme);\n    styles.padding = value;\n  }\n\n  if (isValidSizeValue(systemStyles.m)) {\n    const value = getSizeValue(systemStyles.m, theme);\n    styles.margin = value;\n  }\n\n  if (isValidSizeValue(systemStyles.py)) {\n    const value = getSizeValue(systemStyles.py, theme);\n    styles.paddingTop = value;\n    styles.paddingBottom = value;\n  }\n\n  if (isValidSizeValue(systemStyles.px)) {\n    const value = getSizeValue(systemStyles.px, theme);\n    styles.paddingLeft = value;\n    styles.paddingRight = value;\n  }\n\n  if (isValidSizeValue(systemStyles.my)) {\n    const value = getSizeValue(systemStyles.my, theme);\n    styles.marginTop = value;\n    styles.marginBottom = value;\n  }\n\n  if (isValidSizeValue(systemStyles.mx)) {\n    const value = getSizeValue(systemStyles.mx, theme);\n    styles.marginLeft = value;\n    styles.marginRight = value;\n  }\n\n  Object.keys(SYSTEM_PROPS).forEach(property => {\n    if (isValidSizeValue(systemStyles[property])) {\n      styles[SYSTEM_PROPS[property]] = theme.fn.size({\n        size: getSizeValue(systemStyles[property], theme),\n        sizes: theme.spacing\n      });\n    }\n  });\n  return styles;\n}\n\nexport { getSystemStyles };","map":{"version":3,"sources":["../../../../../src/components/Box/use-sx/get-system-styles/get-system-styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { MantineStyleSystemProps, MantineTheme, CSSObject } from '@mantine/styles';\n\nconst SYSTEM_PROPS = {\n  mt: 'marginTop',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mr: 'marginRight',\n  pt: 'paddingTop',\n  pb: 'paddingBottom',\n  pl: 'paddingLeft',\n  pr: 'paddingRight',\n};\n\nconst NEGATIVE_VALUES = ['-xs', '-sm', '-md', '-lg', '-xl'];\n\nfunction isValidSizeValue(margin: any) {\n  return typeof margin === 'string' || typeof margin === 'number';\n}\n\nfunction getSizeValue(margin: any, theme: MantineTheme) {\n  if (NEGATIVE_VALUES.includes(margin)) {\n    return theme.fn.size({ size: margin.replace('-', ''), sizes: theme.spacing }) * -1;\n  }\n\n  return theme.fn.size({ size: margin, sizes: theme.spacing });\n}\n\nexport function getSystemStyles(systemStyles: MantineStyleSystemProps, theme: MantineTheme) {\n  const styles: CSSObject = {};\n\n  if (isValidSizeValue(systemStyles.p)) {\n    const value = getSizeValue(systemStyles.p, theme);\n    styles.padding = value;\n  }\n\n  if (isValidSizeValue(systemStyles.m)) {\n    const value = getSizeValue(systemStyles.m, theme);\n    styles.margin = value;\n  }\n\n  if (isValidSizeValue(systemStyles.py)) {\n    const value = getSizeValue(systemStyles.py, theme);\n    styles.paddingTop = value;\n    styles.paddingBottom = value;\n  }\n\n  if (isValidSizeValue(systemStyles.px)) {\n    const value = getSizeValue(systemStyles.px, theme);\n    styles.paddingLeft = value;\n    styles.paddingRight = value;\n  }\n\n  if (isValidSizeValue(systemStyles.my)) {\n    const value = getSizeValue(systemStyles.my, theme);\n    styles.marginTop = value;\n    styles.marginBottom = value;\n  }\n\n  if (isValidSizeValue(systemStyles.mx)) {\n    const value = getSizeValue(systemStyles.mx, theme);\n    styles.marginLeft = value;\n    styles.marginRight = value;\n  }\n\n  Object.keys(SYSTEM_PROPS).forEach((property) => {\n    if (isValidSizeValue(systemStyles[property])) {\n      styles[SYSTEM_PROPS[property]] = theme.fn.size({\n        size: getSizeValue(systemStyles[property], theme),\n        sizes: theme.spacing,\n      });\n    }\n  });\n\n  return styles;\n}\n"]},"metadata":{},"sourceType":"module"}