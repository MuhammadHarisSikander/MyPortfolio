{"ast":null,"code":"import React, { forwardRef, cloneElement } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useMantineDefaultProps } from '@mantine/styles';\nimport { InputWrapper } from '../../InputWrapper/InputWrapper.js';\nimport { Checkbox } from '../Checkbox.js';\nimport { Group } from '../../Group/Group.js';\nimport { filterChildrenByType } from '../../../utils/filter-children-by-type/filter-children-by-type.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  orientation: \"horizontal\",\n  spacing: \"lg\",\n  size: \"sm\"\n};\nconst CheckboxGroup = forwardRef((props, ref) => {\n  const _a = useMantineDefaultProps(\"CheckboxGroup\", defaultProps, props),\n        {\n    children,\n    value,\n    defaultValue,\n    onChange,\n    orientation,\n    spacing,\n    color,\n    size,\n    classNames,\n    styles,\n    wrapperProps,\n    errorProps,\n    labelProps,\n    descriptionProps\n  } = _a,\n        others = __objRest(_a, [\"children\", \"value\", \"defaultValue\", \"onChange\", \"orientation\", \"spacing\", \"color\", \"size\", \"classNames\", \"styles\", \"wrapperProps\", \"errorProps\", \"labelProps\", \"descriptionProps\"]);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange,\n    rule: val => Array.isArray(val)\n  });\n  const checkboxes = filterChildrenByType(children, Checkbox).map((checkbox, index) => cloneElement(checkbox, {\n    key: index,\n    checked: _value.includes(checkbox.props.value),\n    color,\n    size,\n    classNames,\n    styles,\n    __staticSelector: \"CheckboxGroup\",\n    onChange: event => {\n      const itemValue = event.currentTarget.value;\n      setValue(_value.includes(itemValue) ? _value.filter(item => item !== itemValue) : [..._value, itemValue]);\n    }\n  }));\n  return /* @__PURE__ */React.createElement(InputWrapper, __spreadValues(__spreadValues({\n    labelElement: \"div\",\n    size,\n    __staticSelector: \"CheckboxGroup\",\n    classNames,\n    styles,\n    ref,\n    errorProps,\n    descriptionProps,\n    labelProps\n  }, wrapperProps), others), /* @__PURE__ */React.createElement(Group, {\n    spacing,\n    direction: orientation === \"horizontal\" ? \"row\" : \"column\",\n    sx: {\n      paddingTop: 5\n    }\n  }, checkboxes));\n});\nCheckboxGroup.displayName = \"@mantine/core/CheckboxGroup\";\nexport { CheckboxGroup };","map":{"version":3,"sources":["../../../../src/components/Checkbox/CheckboxGroup/CheckboxGroup.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { cloneElement, forwardRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  useMantineDefaultProps,\n} from '@mantine/styles';\nimport { filterChildrenByType } from '../../../utils';\nimport {\n  InputWrapper,\n  InputWrapperBaseProps,\n  InputWrapperStylesNames,\n} from '../../InputWrapper/InputWrapper';\nimport { Checkbox, CheckboxStylesNames } from '../Checkbox';\nimport { Group } from '../../Group/Group';\n\nexport type CheckboxGroupStylesNames = InputWrapperStylesNames | CheckboxStylesNames;\n\nexport interface CheckboxGroupProps\n  extends DefaultProps<CheckboxGroupStylesNames>,\n    InputWrapperBaseProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange'> {\n  /** <Checkbox /> components only */\n  children: React.ReactNode;\n\n  /** Value of currently selected checkbox */\n  value?: string[];\n\n  /** Initial value for uncontrolled component */\n  defaultValue?: string[];\n\n  /** Called when value changes */\n  onChange?(value: string[]): void;\n\n  /** Horizontal or vertical orientation */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** Spacing between checkboxes in horizontal orientation */\n  spacing?: MantineNumberSize;\n\n  /** Activated checkbox color from theme.colors */\n  color?: MantineColor;\n\n  /** Predefined label fontSize, checkbox width, height and border-radius */\n  size?: MantineSize;\n\n  /** Props spread to InputWrapper */\n  wrapperProps?: { [key: string]: any };\n}\n\nconst defaultProps: Partial<CheckboxGroupProps> = {\n  orientation: 'horizontal',\n  spacing: 'lg',\n  size: 'sm',\n};\n\nexport const CheckboxGroup = forwardRef<HTMLDivElement, CheckboxGroupProps>(\n  (props: CheckboxGroupProps, ref) => {\n    const {\n      children,\n      value,\n      defaultValue,\n      onChange,\n      orientation,\n      spacing,\n      color,\n      size,\n      classNames,\n      styles,\n      wrapperProps,\n      errorProps,\n      labelProps,\n      descriptionProps,\n      ...others\n    } = useMantineDefaultProps('CheckboxGroup', defaultProps, props);\n\n    const [_value, setValue] = useUncontrolled({\n      value,\n      defaultValue,\n      finalValue: [],\n      onChange,\n      rule: (val) => Array.isArray(val),\n    });\n\n    const checkboxes = filterChildrenByType(children, Checkbox).map((checkbox, index) =>\n      cloneElement(checkbox, {\n        key: index,\n        checked: _value.includes(checkbox.props.value),\n        color,\n        size,\n        classNames,\n        styles,\n        __staticSelector: 'CheckboxGroup',\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          const itemValue = event.currentTarget.value;\n          setValue(\n            _value.includes(itemValue)\n              ? _value.filter((item) => item !== itemValue)\n              : [..._value, itemValue]\n          );\n        },\n      })\n    );\n\n    return (\n      <InputWrapper\n        labelElement=\"div\"\n        size={size}\n        __staticSelector=\"CheckboxGroup\"\n        classNames={classNames}\n        styles={styles}\n        ref={ref}\n        errorProps={errorProps}\n        descriptionProps={descriptionProps}\n        labelProps={labelProps}\n        {...wrapperProps}\n        {...others}\n      >\n        <Group\n          spacing={spacing}\n          direction={orientation === 'horizontal' ? 'row' : 'column'}\n          sx={{ paddingTop: 5 }}\n        >\n          {checkboxes}\n        </Group>\n      </InputWrapper>\n    );\n  }\n);\n\nCheckboxGroup.displayName = '@mantine/core/CheckboxGroup';\n"]},"metadata":{},"sourceType":"module"}