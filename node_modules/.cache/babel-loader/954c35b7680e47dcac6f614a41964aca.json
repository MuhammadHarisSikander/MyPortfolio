{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useUuid, useFocusTrap, useScrollLock, useFocusReturn } from '@mantine/hooks';\nimport { getDefaultZIndex, useMantineDefaultProps } from '@mantine/styles';\nimport useStyles from './Modal.styles.js';\nimport { OptionalPortal } from '../Portal/OptionalPortal.js';\nimport { GroupedTransition } from '../Transition/GroupedTransition.js';\nimport { Box } from '../Box/Box.js';\nimport { Paper } from '../Paper/Paper.js';\nimport { Text } from '../Text/Text.js';\nimport { CloseButton } from '../ActionIcon/CloseButton/CloseButton.js';\nimport { Overlay } from '../Overlay/Overlay.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  size: \"md\",\n  transitionDuration: 250,\n  overflow: \"outside\",\n  transition: \"pop\",\n  padding: \"lg\",\n  shadow: \"lg\",\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  trapFocus: true,\n  withCloseButton: true,\n  withinPortal: true,\n  zIndex: getDefaultZIndex(\"modal\")\n};\n\nfunction Modal(props) {\n  const _a = useMantineDefaultProps(\"Modal\", defaultProps, props),\n        {\n    className,\n    opened,\n    title,\n    onClose,\n    children,\n    withCloseButton,\n    overlayOpacity,\n    size,\n    transitionDuration,\n    closeButtonLabel,\n    overlayColor,\n    overflow,\n    transition,\n    padding,\n    shadow,\n    radius,\n    id,\n    classNames,\n    styles,\n    closeOnClickOutside,\n    trapFocus,\n    closeOnEscape,\n    centered,\n    target,\n    withinPortal,\n    zIndex\n  } = _a,\n        others = __objRest(_a, [\"className\", \"opened\", \"title\", \"onClose\", \"children\", \"withCloseButton\", \"overlayOpacity\", \"size\", \"transitionDuration\", \"closeButtonLabel\", \"overlayColor\", \"overflow\", \"transition\", \"padding\", \"shadow\", \"radius\", \"id\", \"classNames\", \"styles\", \"closeOnClickOutside\", \"trapFocus\", \"closeOnEscape\", \"centered\", \"target\", \"withinPortal\", \"zIndex\"]);\n\n  const baseId = useUuid(id);\n  const titleId = `${baseId}-title`;\n  const bodyId = `${baseId}-body`;\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size,\n    overflow,\n    centered,\n    zIndex\n  }, {\n    classNames,\n    styles,\n    name: \"Modal\"\n  });\n  const focusTrapRef = useFocusTrap(trapFocus && opened);\n\n  const _overlayOpacity = typeof overlayOpacity === \"number\" ? overlayOpacity : theme.colorScheme === \"dark\" ? 0.85 : 0.75;\n\n  const [, lockScroll] = useScrollLock();\n\n  const closeOnEscapePress = event => {\n    if (!trapFocus && event.code === \"Escape\" && closeOnEscape) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (!trapFocus) {\n      window.addEventListener(\"keydown\", closeOnEscapePress);\n      return () => window.removeEventListener(\"keydown\", closeOnEscapePress);\n    }\n\n    return void 0;\n  }, [trapFocus]);\n  useFocusReturn({\n    opened,\n    transitionDuration: 0\n  });\n  return /* @__PURE__ */React.createElement(OptionalPortal, {\n    withinPortal,\n    zIndex,\n    target\n  }, /* @__PURE__ */React.createElement(GroupedTransition, {\n    onExited: () => lockScroll(false),\n    onEntered: () => lockScroll(true),\n    mounted: opened,\n    duration: transitionDuration,\n    exitDuration: transitionDuration,\n    transitions: {\n      modal: {\n        duration: transitionDuration,\n        transition\n      },\n      overlay: {\n        duration: transitionDuration / 2,\n        transition: \"fade\",\n        timingFunction: \"ease\"\n      }\n    }\n  }, transitionStyles => /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className)\n  }, others), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.inner,\n    onKeyDownCapture: event => {\n      var _a2;\n\n      const shouldTrigger = ((_a2 = event.target) == null ? void 0 : _a2.getAttribute(\"data-mantine-stop-propagation\")) !== \"true\";\n      shouldTrigger && event.nativeEvent.code === \"Escape\" && closeOnEscape && onClose();\n    },\n    ref: focusTrapRef\n  }, /* @__PURE__ */React.createElement(Paper, {\n    className: classes.modal,\n    shadow,\n    p: padding,\n    radius,\n    role: \"dialog\",\n    \"aria-labelledby\": titleId,\n    \"aria-describedby\": bodyId,\n    \"aria-modal\": true,\n    tabIndex: -1,\n    style: transitionStyles.modal\n  }, (title || withCloseButton) && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.header\n  }, /* @__PURE__ */React.createElement(Text, {\n    id: titleId,\n    className: classes.title\n  }, title), withCloseButton && /* @__PURE__ */React.createElement(CloseButton, {\n    iconSize: 16,\n    onClick: onClose,\n    \"aria-label\": closeButtonLabel,\n    className: classes.close\n  })), /* @__PURE__ */React.createElement(\"div\", {\n    id: bodyId,\n    className: classes.body\n  }, children)), /* @__PURE__ */React.createElement(\"div\", {\n    style: transitionStyles.overlay\n  }, /* @__PURE__ */React.createElement(Overlay, {\n    className: classes.overlay,\n    sx: {\n      position: \"fixed\"\n    },\n    zIndex: 0,\n    onMouseDown: () => closeOnClickOutside && onClose(),\n    color: overlayColor || (theme.colorScheme === \"dark\" ? theme.colors.dark[9] : theme.black),\n    opacity: _overlayOpacity\n  }))))));\n}\n\nModal.displayName = \"@mantine/core/Modal\";\nexport { Modal };","map":{"version":3,"sources":["../../../src/components/Modal/Modal.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\nimport React, { useEffect } from 'react';\nimport { useScrollLock, useFocusTrap, useFocusReturn, useUuid } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineShadow,\n  ClassNames,\n  MantineStyleSystemSize,\n  getDefaultZIndex,\n  useMantineDefaultProps,\n} from '@mantine/styles';\nimport { CloseButton } from '../ActionIcon';\nimport { Text } from '../Text';\nimport { Paper } from '../Paper';\nimport { Overlay } from '../Overlay';\nimport { OptionalPortal } from '../Portal';\nimport { Box } from '../Box';\nimport { GroupedTransition, MantineTransition } from '../Transition';\nimport useStyles from './Modal.styles';\n\nexport type ModalStylesNames = ClassNames<typeof useStyles>;\n\nexport interface ModalProps\n  extends Omit<DefaultProps<ModalStylesNames>, MantineStyleSystemSize>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  /** Mounts modal if true */\n  opened: boolean;\n\n  /** Called when close button clicked and when escape key is pressed */\n  onClose(): void;\n\n  /** Modal title, displayed in header before close button */\n  title?: React.ReactNode;\n\n  /** Modal z-index property */\n  zIndex?: number;\n\n  /** Control vertical overflow behavior */\n  overflow?: 'outside' | 'inside';\n\n  /** Hides close button if set to false, modal still can be closed with escape key and by clicking outside */\n  withCloseButton?: boolean;\n\n  /** Overlay below modal opacity, defaults to 0.75 in light theme and to 0.85 in dark theme */\n  overlayOpacity?: number;\n\n  /** Overlay below modal color, defaults to theme.black in light theme and to theme.colors.dark[9] in dark theme */\n  overlayColor?: string;\n\n  /** Modal radius */\n  radius?: MantineNumberSize;\n\n  /** Modal body width */\n  size?: string | number;\n\n  /** Modal body transition */\n  transition?: MantineTransition;\n\n  /** Duration in ms of modal transitions, set to 0 to disable all animations */\n  transitionDuration?: number;\n\n  /** Modal body transitionTimingFunction, defaults to theme.transitionTimingFunction */\n  transitionTimingFunction?: string;\n\n  /** Close button aria-label */\n  closeButtonLabel?: string;\n\n  /** id base, used to generate ids to connect modal title and body with aria- attributes, defaults to random id */\n  id?: string;\n\n  /** Modal shadow from theme or css value */\n  shadow?: MantineShadow;\n\n  /** Modal padding from theme or number value for padding in px */\n  padding?: MantineNumberSize;\n\n  /** Should modal be closed when outside click was registered? */\n  closeOnClickOutside?: boolean;\n\n  /** Should modal be closed when escape is pressed? */\n  closeOnEscape?: boolean;\n\n  /** Disables focus trap */\n  trapFocus?: boolean;\n\n  /** Controls if modal should be centered */\n  centered?: boolean;\n\n  /** Target element or selector where modal portal should be rendered */\n  target?: HTMLElement | string;\n\n  /** Determines whether modal should be rendered within Portal, defaults to true */\n  withinPortal?: boolean;\n}\n\nconst defaultProps: Partial<ModalProps> = {\n  size: 'md',\n  transitionDuration: 250,\n  overflow: 'outside',\n  transition: 'pop',\n  padding: 'lg',\n  shadow: 'lg',\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  trapFocus: true,\n  withCloseButton: true,\n  withinPortal: true,\n  zIndex: getDefaultZIndex('modal'),\n};\n\nexport function Modal(props: ModalProps) {\n  const {\n    className,\n    opened,\n    title,\n    onClose,\n    children,\n    withCloseButton,\n    overlayOpacity,\n    size,\n    transitionDuration,\n    closeButtonLabel,\n    overlayColor,\n    overflow,\n    transition,\n    padding,\n    shadow,\n    radius,\n    id,\n    classNames,\n    styles,\n    closeOnClickOutside,\n    trapFocus,\n    closeOnEscape,\n    centered,\n    target,\n    withinPortal,\n    zIndex,\n    ...others\n  } = useMantineDefaultProps('Modal', defaultProps, props);\n  const baseId = useUuid(id);\n  const titleId = `${baseId}-title`;\n  const bodyId = `${baseId}-body`;\n  const { classes, cx, theme } = useStyles(\n    { size, overflow, centered, zIndex },\n    { classNames, styles, name: 'Modal' }\n  );\n  const focusTrapRef = useFocusTrap(trapFocus && opened);\n  const _overlayOpacity =\n    typeof overlayOpacity === 'number'\n      ? overlayOpacity\n      : theme.colorScheme === 'dark'\n      ? 0.85\n      : 0.75;\n\n  const [, lockScroll] = useScrollLock();\n\n  const closeOnEscapePress = (event: KeyboardEvent) => {\n    if (!trapFocus && event.code === 'Escape' && closeOnEscape) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (!trapFocus) {\n      window.addEventListener('keydown', closeOnEscapePress);\n      return () => window.removeEventListener('keydown', closeOnEscapePress);\n    }\n\n    return undefined;\n  }, [trapFocus]);\n\n  useFocusReturn({ opened, transitionDuration: 0 });\n\n  return (\n    <OptionalPortal withinPortal={withinPortal} zIndex={zIndex} target={target}>\n      <GroupedTransition\n        onExited={() => lockScroll(false)}\n        onEntered={() => lockScroll(true)}\n        mounted={opened}\n        duration={transitionDuration}\n        exitDuration={transitionDuration}\n        transitions={{\n          modal: { duration: transitionDuration, transition },\n          overlay: {\n            duration: transitionDuration / 2,\n            transition: 'fade',\n            timingFunction: 'ease',\n          },\n        }}\n      >\n        {(transitionStyles) => (\n          <Box className={cx(classes.root, className)} {...others}>\n            <div\n              className={classes.inner}\n              onKeyDownCapture={(event) => {\n                const shouldTrigger =\n                  (event.target as any)?.getAttribute('data-mantine-stop-propagation') !== 'true';\n                shouldTrigger && event.nativeEvent.code === 'Escape' && closeOnEscape && onClose();\n              }}\n              ref={focusTrapRef}\n            >\n              <Paper<'div'>\n                className={classes.modal}\n                shadow={shadow}\n                p={padding}\n                radius={radius}\n                role=\"dialog\"\n                aria-labelledby={titleId}\n                aria-describedby={bodyId}\n                aria-modal\n                tabIndex={-1}\n                style={transitionStyles.modal}\n              >\n                {(title || withCloseButton) && (\n                  <div className={classes.header}>\n                    <Text id={titleId} className={classes.title}>\n                      {title}\n                    </Text>\n\n                    {withCloseButton && (\n                      <CloseButton\n                        iconSize={16}\n                        onClick={onClose}\n                        aria-label={closeButtonLabel}\n                        className={classes.close}\n                      />\n                    )}\n                  </div>\n                )}\n\n                <div id={bodyId} className={classes.body}>\n                  {children}\n                </div>\n              </Paper>\n              <div style={transitionStyles.overlay}>\n                <Overlay\n                  className={classes.overlay}\n                  sx={{ position: 'fixed' }}\n                  zIndex={0}\n                  onMouseDown={() => closeOnClickOutside && onClose()}\n                  color={\n                    overlayColor ||\n                    (theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.black)\n                  }\n                  opacity={_overlayOpacity}\n                />\n              </div>\n            </div>\n          </Box>\n        )}\n      </GroupedTransition>\n    </OptionalPortal>\n  );\n}\n\nModal.displayName = '@mantine/core/Modal';\n"]},"metadata":{},"sourceType":"module"}