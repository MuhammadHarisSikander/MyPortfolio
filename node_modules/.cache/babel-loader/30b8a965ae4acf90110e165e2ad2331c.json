{"ast":null,"code":"import React from 'react';\nimport { useGridContext } from '../Grid.context.js';\nimport useStyles from './Col.styles.js';\nimport { Box } from '../../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nfunction isValidSpan(span) {\n  return typeof span === \"number\" && span > 0 && span % 1 === 0;\n}\n\nfunction Col(_a) {\n  var _b = _a,\n      {\n    children,\n    span,\n    offset = 0,\n    offsetXs = 0,\n    offsetSm = 0,\n    offsetMd = 0,\n    offsetLg = 0,\n    offsetXl = 0,\n    xs,\n    sm,\n    md,\n    lg,\n    xl,\n    className,\n    classNames,\n    styles,\n    id\n  } = _b,\n      others = __objRest(_b, [\"children\", \"span\", \"offset\", \"offsetXs\", \"offsetSm\", \"offsetMd\", \"offsetLg\", \"offsetXl\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"className\", \"classNames\", \"styles\", \"id\"]);\n\n  const {\n    columns,\n    gutter,\n    grow\n  } = useGridContext(\"Grid.Col\");\n  const colSpan = span || columns;\n  const {\n    classes,\n    cx\n  } = useStyles({\n    gutter,\n    offset,\n    offsetXs,\n    offsetSm,\n    offsetMd,\n    offsetLg,\n    offsetXl,\n    xs,\n    sm,\n    md,\n    lg,\n    xl,\n    grow,\n    columns,\n    span: colSpan\n  }, {\n    classNames,\n    styles,\n    name: \"Col\"\n  });\n\n  if (!isValidSpan(colSpan) || colSpan > columns) {\n    return null;\n  }\n\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className)\n  }, others), children);\n}\n\nCol.displayName = \"@mantine/core/Col\";\nexport { Col };","map":{"version":3,"sources":["../../../../src/components/Grid/Col/Col.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DefaultProps } from '@mantine/styles';\nimport { Box } from '../../Box';\nimport { useGridContext } from '../Grid.context';\nimport useStyles from './Col.styles';\n\nexport interface ColProps extends DefaultProps, React.ComponentPropsWithoutRef<'div'> {\n  /** Default col span */\n  span?: number;\n\n  /** Column left offset */\n  offset?: number;\n\n  /** Column left offset at (min-width: theme.breakpoints.xs) */\n  offsetXs?: number;\n\n  /** Column left offset at (min-width: theme.breakpoints.sm) */\n  offsetSm?: number;\n\n  /** Column left offset at (min-width: theme.breakpoints.md) */\n  offsetMd?: number;\n\n  /** Column left offset at (min-width: theme.breakpoints.lg) */\n  offsetLg?: number;\n\n  /** Column left offset at (min-width: theme.breakpoints.xl) */\n  offsetXl?: number;\n\n  /** Col span at (min-width: theme.breakpoints.xs) */\n  xs?: number;\n\n  /** Col span at (min-width: theme.breakpoints.sm) */\n  sm?: number;\n\n  /** Col span at (min-width: theme.breakpoints.md) */\n  md?: number;\n\n  /** Col span at (min-width: theme.breakpoints.lg) */\n  lg?: number;\n\n  /** Col span at (min-width: theme.breakpoints.xl) */\n  xl?: number;\n}\n\nfunction isValidSpan(span: number) {\n  return typeof span === 'number' && span > 0 && span % 1 === 0;\n}\n\nexport function Col({\n  children,\n  span,\n  offset = 0,\n  offsetXs = 0,\n  offsetSm = 0,\n  offsetMd = 0,\n  offsetLg = 0,\n  offsetXl = 0,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  className,\n  classNames,\n  styles,\n  id,\n  ...others\n}: ColProps) {\n  const { columns, gutter, grow } = useGridContext('Grid.Col');\n  const colSpan = span || columns;\n  const { classes, cx } = useStyles(\n    {\n      gutter,\n      offset,\n      offsetXs,\n      offsetSm,\n      offsetMd,\n      offsetLg,\n      offsetXl,\n      xs,\n      sm,\n      md,\n      lg,\n      xl,\n      grow,\n      columns,\n      span: colSpan,\n    },\n    { classNames, styles, name: 'Col' }\n  );\n\n  if (!isValidSpan(colSpan) || colSpan > columns) {\n    return null;\n  }\n\n  return (\n    <Box className={cx(classes.root, className)} {...others}>\n      {children}\n    </Box>\n  );\n}\n\nCol.displayName = '@mantine/core/Col';\n"]},"metadata":{},"sourceType":"module"}