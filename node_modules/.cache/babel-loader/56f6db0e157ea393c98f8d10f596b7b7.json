{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useUncontrolled, useMove, useMergedRef } from '@mantine/hooks';\nimport { useMantineDefaultProps, useMantineTheme } from '@mantine/styles';\nimport { getClientPosition } from '../utils/get-client-position/get-client-position.js';\nimport { getPosition } from '../utils/get-position/get-position.js';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value.js';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport { Track } from '../Track/Track.js';\nimport { SliderRoot } from '../SliderRoot/SliderRoot.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  size: \"md\",\n  radius: \"xl\",\n  min: 0,\n  max: 100,\n  minRange: 10,\n  step: 1,\n  marks: [],\n  label: f => f,\n  labelTransition: \"skew-down\",\n  labelTransitionDuration: 0,\n  labelAlwaysOn: false,\n  thumbFromLabel: \"\",\n  thumbToLabel: \"\",\n  showLabelOnHover: true,\n  disabled: false\n};\nconst RangeSlider = forwardRef((props, ref) => {\n  const _a = useMantineDefaultProps(\"RangeSlider\", defaultProps, props),\n        {\n    classNames,\n    styles,\n    color,\n    value,\n    onChange,\n    onChangeEnd,\n    size,\n    radius,\n    min,\n    max,\n    minRange,\n    step,\n    precision,\n    defaultValue,\n    name,\n    marks,\n    label,\n    labelTransition,\n    labelTransitionDuration,\n    labelTransitionTimingFunction,\n    labelAlwaysOn,\n    thumbFromLabel,\n    thumbToLabel,\n    showLabelOnHover,\n    thumbChildren,\n    disabled\n  } = _a,\n        others = __objRest(_a, [\"classNames\", \"styles\", \"color\", \"value\", \"onChange\", \"onChangeEnd\", \"size\", \"radius\", \"min\", \"max\", \"minRange\", \"step\", \"precision\", \"defaultValue\", \"name\", \"marks\", \"label\", \"labelTransition\", \"labelTransitionDuration\", \"labelTransitionTimingFunction\", \"labelAlwaysOn\", \"thumbFromLabel\", \"thumbToLabel\", \"showLabelOnHover\", \"thumbChildren\", \"disabled\"]);\n\n  const theme = useMantineTheme();\n  const [focused, setFocused] = useState(-1);\n  const [hovered, setHovered] = useState(false);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [min, max],\n    rule: val => Array.isArray(val),\n    onChange\n  });\n  const valueRef = useRef(_value);\n  const thumbs = useRef([]);\n  const thumbIndex = useRef(void 0);\n  const positions = [getPosition({\n    value: _value[0],\n    min,\n    max\n  }), getPosition({\n    value: _value[1],\n    min,\n    max\n  })];\n\n  const _setValue = val => {\n    setValue(val);\n    valueRef.current = val;\n  };\n\n  useEffect(() => {\n    if (Array.isArray(value)) {\n      valueRef.current = value;\n    }\n  }, Array.isArray(value) ? [value[0], value[1]] : [null, null]);\n\n  const setRangedValue = (val, index, triggerChangeEnd) => {\n    const clone = [...valueRef.current];\n    clone[index] = val;\n\n    if (index === 0) {\n      if (val > clone[1] - minRange) {\n        clone[1] = Math.min(val + minRange, max);\n      }\n\n      if (val > (max - minRange || min)) {\n        clone[index] = valueRef.current[index];\n      }\n    }\n\n    if (index === 1) {\n      if (val < clone[0] + minRange) {\n        clone[0] = Math.max(val - minRange, min);\n      }\n\n      if (val < clone[0] + minRange) {\n        clone[index] = valueRef.current[index];\n      }\n    }\n\n    _setValue(clone);\n\n    if (triggerChangeEnd) {\n      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n    }\n  };\n\n  const handleChange = val => {\n    if (!disabled) {\n      const nextValue = getChangeValue({\n        value: val,\n        min,\n        max,\n        step,\n        precision\n      });\n      setRangedValue(nextValue, thumbIndex.current, false);\n    }\n  };\n\n  const {\n    ref: container,\n    active\n  } = useMove(_ref => {\n    let {\n      x\n    } = _ref;\n    return handleChange(x);\n  }, {\n    onScrubEnd: () => onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current)\n  }, theme.dir);\n\n  function handleThumbMouseDown(event, index) {\n    if (event.cancelable) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    thumbIndex.current = index;\n  }\n\n  const handleTrackMouseDownCapture = event => {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    container.current.focus();\n    const rect = container.current.getBoundingClientRect();\n    const changePosition = getClientPosition(event.nativeEvent);\n    const changeValue = getChangeValue({\n      value: changePosition - rect.left,\n      max,\n      min,\n      step,\n      containerWidth: rect.width\n    });\n    const nearestHandle = Math.abs(_value[0] - changeValue) > Math.abs(_value[1] - changeValue) ? 1 : 0;\n\n    const _nearestHandle = theme.dir === \"ltr\" ? nearestHandle : nearestHandle === 1 ? 0 : 1;\n\n    thumbIndex.current = _nearestHandle;\n  };\n\n  const getFocusedThumbIndex = () => {\n    if (focused !== 1 && focused !== 0) {\n      setFocused(0);\n      return 0;\n    }\n\n    return focused;\n  };\n\n  const handleTrackKeydownCapture = event => {\n    if (!disabled) {\n      switch (event.nativeEvent.code) {\n        case \"ArrowUp\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(valueRef.current[focusedIndex] + step, min), max), focusedIndex, true);\n            break;\n          }\n\n        case \"ArrowRight\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(theme.dir === \"rtl\" ? valueRef.current[focusedIndex] - step : valueRef.current[focusedIndex] + step, min), max), focusedIndex, true);\n            break;\n          }\n\n        case \"ArrowDown\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(valueRef.current[focusedIndex] - step, min), max), focusedIndex, true);\n            break;\n          }\n\n        case \"ArrowLeft\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(theme.dir === \"rtl\" ? valueRef.current[focusedIndex] + step : valueRef.current[focusedIndex] - step, min), max), focusedIndex, true);\n            break;\n          }\n      }\n    }\n  };\n\n  const sharedThumbProps = {\n    max,\n    min,\n    color,\n    size,\n    labelTransition,\n    labelTransitionDuration,\n    labelTransitionTimingFunction,\n    labelAlwaysOn,\n    onBlur: () => setFocused(-1),\n    classNames,\n    styles\n  };\n  const hasArrayThumbChildren = Array.isArray(thumbChildren);\n  return /* @__PURE__ */React.createElement(SliderRoot, __spreadProps(__spreadValues({}, others), {\n    size,\n    ref: useMergedRef(container, ref),\n    onTouchStartCapture: handleTrackMouseDownCapture,\n    onTouchEndCapture: () => {\n      thumbIndex.current = -1;\n    },\n    onMouseDownCapture: handleTrackMouseDownCapture,\n    onMouseUpCapture: () => {\n      thumbIndex.current = -1;\n    },\n    onKeyDownCapture: handleTrackKeydownCapture,\n    styles,\n    classNames,\n    disabled\n  }), /* @__PURE__ */React.createElement(Track, {\n    offset: positions[0],\n    marksOffset: _value[0],\n    filled: positions[1] - positions[0],\n    marks,\n    size,\n    radius,\n    color,\n    min,\n    max,\n    value: _value[1],\n    styles,\n    classNames,\n    onMouseEnter: showLabelOnHover ? () => setHovered(true) : void 0,\n    onMouseLeave: showLabelOnHover ? () => setHovered(false) : void 0,\n    onChange: val => {\n      const nearestValue = Math.abs(_value[0] - val) > Math.abs(_value[1] - val) ? 1 : 0;\n      const clone = [..._value];\n      clone[nearestValue] = val;\n\n      _setValue(clone);\n    },\n    disabled\n  }, /* @__PURE__ */React.createElement(Thumb, __spreadProps(__spreadValues({}, sharedThumbProps), {\n    value: _value[0],\n    position: positions[0],\n    dragging: active,\n    label: typeof label === \"function\" ? label(_value[0]) : label,\n    ref: node => {\n      thumbs.current[0] = node;\n    },\n    thumbLabel: thumbFromLabel,\n    onMouseDown: event => handleThumbMouseDown(event, 0),\n    onFocus: () => setFocused(0),\n    showLabelOnHover: showLabelOnHover && hovered,\n    disabled\n  }), hasArrayThumbChildren ? thumbChildren[0] : thumbChildren), /* @__PURE__ */React.createElement(Thumb, __spreadProps(__spreadValues({}, sharedThumbProps), {\n    thumbLabel: thumbToLabel,\n    value: _value[1],\n    position: positions[1],\n    dragging: active,\n    label: typeof label === \"function\" ? label(_value[1]) : label,\n    ref: node => {\n      thumbs.current[1] = node;\n    },\n    onMouseDown: event => handleThumbMouseDown(event, 1),\n    onFocus: () => setFocused(1),\n    showLabelOnHover: showLabelOnHover && hovered,\n    disabled\n  }), hasArrayThumbChildren ? thumbChildren[1] : thumbChildren)), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `${name}_from`,\n    value: _value[0]\n  }), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `${name}_to`,\n    value: _value[1]\n  }));\n});\nRangeSlider.displayName = \"@mantine/core/RangeSlider\";\nexport { RangeSlider };","map":{"version":3,"sources":["../../../../src/components/Slider/RangeSlider/RangeSlider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef, useState, forwardRef, useEffect } from 'react';\nimport { useMove, useUncontrolled, useMergedRef } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineColor,\n  useMantineTheme,\n  useMantineDefaultProps,\n} from '@mantine/styles';\nimport { MantineTransition } from '../../Transition';\nimport { getClientPosition } from '../utils/get-client-position/get-client-position';\nimport { getPosition } from '../utils/get-position/get-position';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value';\nimport { Thumb, ThumbStylesNames } from '../Thumb/Thumb';\nimport { Track, TrackStylesNames } from '../Track/Track';\nimport { MarksStylesNames } from '../Marks/Marks';\nimport { SliderRoot, SliderRootStylesNames } from '../SliderRoot/SliderRoot';\n\nexport type RangeSliderStylesNames =\n  | SliderRootStylesNames\n  | ThumbStylesNames\n  | TrackStylesNames\n  | MarksStylesNames;\n\ntype Value = [number, number];\n\nexport interface RangeSliderProps\n  extends DefaultProps<RangeSliderStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange' | 'defaultValue'> {\n  /** Color from theme.colors */\n  color?: MantineColor;\n\n  /** Track border-radius from theme or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined track and thumb size, number to set sizes in px */\n  size?: MantineNumberSize;\n\n  /** Minimal possible value */\n  min?: number;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimal range interval */\n  minRange?: number;\n\n  /** Number by which value will be incremented/decremented with thumb drag and arrows */\n  step?: number;\n\n  /** Amount of digits after the decimal point */\n  precision?: number;\n\n  /** Current value for controlled slider */\n  value?: Value;\n\n  /** Default value for uncontrolled slider */\n  defaultValue?: Value;\n\n  /** Called each time value changes */\n  onChange?(value: Value): void;\n\n  /** Called when user stops dragging slider or changes value with arrows */\n  onChangeEnd?(value: Value): void;\n\n  /** Hidden input name, use with uncontrolled variant */\n  name?: string;\n\n  /** Marks which will be placed on the track */\n  marks?: { value: number; label?: React.ReactNode }[];\n\n  /** Function to generate label or any react node to render instead, set to null to disable label */\n  label?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Label appear/disappear transition */\n  labelTransition?: MantineTransition;\n\n  /** Label appear/disappear transition duration in ms */\n  labelTransitionDuration?: number;\n\n  /** Label appear/disappear transition timing function, defaults to theme.transitionRimingFunction */\n  labelTransitionTimingFunction?: string;\n\n  /** If true label will be not be hidden when user stops dragging */\n  labelAlwaysOn?: boolean;\n\n  /** First thumb aria-label */\n  thumbFromLabel?: string;\n\n  /** Second thumb aria-label */\n  thumbToLabel?: string;\n\n  /**If true slider label will appear on hover */\n  showLabelOnHover?: boolean;\n\n  /** Thumbs children, can be used to add icons */\n  thumbChildren?: React.ReactNode;\n\n  /** Disables slider */\n  disabled?: boolean;\n}\n\nconst defaultProps: Partial<RangeSliderProps> = {\n  size: 'md',\n  radius: 'xl',\n  min: 0,\n  max: 100,\n  minRange: 10,\n  step: 1,\n  marks: [],\n  label: (f) => f,\n  labelTransition: 'skew-down',\n  labelTransitionDuration: 0,\n  labelAlwaysOn: false,\n  thumbFromLabel: '',\n  thumbToLabel: '',\n  showLabelOnHover: true,\n  disabled: false,\n};\n\nexport const RangeSlider = forwardRef<HTMLDivElement, RangeSliderProps>(\n  (props: RangeSliderProps, ref) => {\n    const {\n      classNames,\n      styles,\n      color,\n      value,\n      onChange,\n      onChangeEnd,\n      size,\n      radius,\n      min,\n      max,\n      minRange,\n      step,\n      precision,\n      defaultValue,\n      name,\n      marks,\n      label,\n      labelTransition,\n      labelTransitionDuration,\n      labelTransitionTimingFunction,\n      labelAlwaysOn,\n      thumbFromLabel,\n      thumbToLabel,\n      showLabelOnHover,\n      thumbChildren,\n      disabled,\n      ...others\n    } = useMantineDefaultProps('RangeSlider', defaultProps, props);\n\n    const theme = useMantineTheme();\n    const [focused, setFocused] = useState(-1);\n    const [hovered, setHovered] = useState(false);\n    const [_value, setValue] = useUncontrolled<Value>({\n      value,\n      defaultValue,\n      finalValue: [min, max],\n      rule: (val) => Array.isArray(val),\n      onChange,\n    });\n    const valueRef = useRef(_value);\n    const thumbs = useRef<HTMLDivElement[]>([]);\n    const thumbIndex = useRef<number>(undefined);\n    const positions = [\n      getPosition({ value: _value[0], min, max }),\n      getPosition({ value: _value[1], min, max }),\n    ];\n\n    const _setValue = (val: Value) => {\n      setValue(val);\n      valueRef.current = val;\n    };\n\n    useEffect(\n      () => {\n        if (Array.isArray(value)) {\n          valueRef.current = value;\n        }\n      },\n      Array.isArray(value) ? [value[0], value[1]] : [null, null]\n    );\n\n    const setRangedValue = (val: number, index: number, triggerChangeEnd: boolean) => {\n      const clone: Value = [...valueRef.current];\n      clone[index] = val;\n\n      if (index === 0) {\n        if (val > clone[1] - minRange) {\n          clone[1] = Math.min(val + minRange, max);\n        }\n\n        if (val > (max - minRange || min)) {\n          clone[index] = valueRef.current[index];\n        }\n      }\n\n      if (index === 1) {\n        if (val < clone[0] + minRange) {\n          clone[0] = Math.max(val - minRange, min);\n        }\n\n        if (val < clone[0] + minRange) {\n          clone[index] = valueRef.current[index];\n        }\n      }\n\n      _setValue(clone);\n\n      if (triggerChangeEnd) {\n        onChangeEnd?.(valueRef.current);\n      }\n    };\n\n    const handleChange = (val: number) => {\n      if (!disabled) {\n        const nextValue = getChangeValue({ value: val, min, max, step, precision });\n        setRangedValue(nextValue, thumbIndex.current, false);\n      }\n    };\n\n    const { ref: container, active } = useMove(\n      ({ x }) => handleChange(x),\n      { onScrubEnd: () => onChangeEnd?.(valueRef.current) },\n      theme.dir\n    );\n\n    function handleThumbMouseDown(\n      event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>,\n      index: number\n    ) {\n      if (event.cancelable) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      thumbIndex.current = index;\n    }\n\n    const handleTrackMouseDownCapture = (\n      event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>\n    ) => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n\n      container.current.focus();\n      const rect = container.current.getBoundingClientRect();\n      const changePosition = getClientPosition(event.nativeEvent);\n      const changeValue = getChangeValue({\n        value: changePosition - rect.left,\n        max,\n        min,\n        step,\n        containerWidth: rect.width,\n      });\n\n      const nearestHandle =\n        Math.abs(_value[0] - changeValue) > Math.abs(_value[1] - changeValue) ? 1 : 0;\n      const _nearestHandle = theme.dir === 'ltr' ? nearestHandle : nearestHandle === 1 ? 0 : 1;\n\n      thumbIndex.current = _nearestHandle;\n    };\n\n    const getFocusedThumbIndex = () => {\n      if (focused !== 1 && focused !== 0) {\n        setFocused(0);\n        return 0;\n      }\n\n      return focused;\n    };\n\n    const handleTrackKeydownCapture = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (!disabled) {\n        switch (event.nativeEvent.code) {\n          case 'ArrowUp': {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(\n              Math.min(Math.max(valueRef.current[focusedIndex] + step, min), max),\n              focusedIndex,\n              true\n            );\n            break;\n          }\n          case 'ArrowRight': {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(\n              Math.min(\n                Math.max(\n                  theme.dir === 'rtl'\n                    ? valueRef.current[focusedIndex] - step\n                    : valueRef.current[focusedIndex] + step,\n                  min\n                ),\n                max\n              ),\n              focusedIndex,\n              true\n            );\n            break;\n          }\n\n          case 'ArrowDown': {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(\n              Math.min(Math.max(valueRef.current[focusedIndex] - step, min), max),\n              focusedIndex,\n              true\n            );\n            break;\n          }\n          case 'ArrowLeft': {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(\n              Math.min(\n                Math.max(\n                  theme.dir === 'rtl'\n                    ? valueRef.current[focusedIndex] + step\n                    : valueRef.current[focusedIndex] - step,\n                  min\n                ),\n                max\n              ),\n              focusedIndex,\n              true\n            );\n            break;\n          }\n\n          default: {\n            break;\n          }\n        }\n      }\n    };\n\n    const sharedThumbProps = {\n      max,\n      min,\n      color,\n      size,\n      labelTransition,\n      labelTransitionDuration,\n      labelTransitionTimingFunction,\n      labelAlwaysOn,\n      onBlur: () => setFocused(-1),\n      classNames,\n      styles,\n    };\n\n    const hasArrayThumbChildren = Array.isArray(thumbChildren);\n\n    return (\n      <SliderRoot\n        {...others}\n        size={size}\n        ref={useMergedRef(container, ref)}\n        onTouchStartCapture={handleTrackMouseDownCapture}\n        onTouchEndCapture={() => {\n          thumbIndex.current = -1;\n        }}\n        onMouseDownCapture={handleTrackMouseDownCapture}\n        onMouseUpCapture={() => {\n          thumbIndex.current = -1;\n        }}\n        onKeyDownCapture={handleTrackKeydownCapture}\n        styles={styles}\n        classNames={classNames}\n        disabled={disabled}\n      >\n        <Track\n          offset={positions[0]}\n          marksOffset={_value[0]}\n          filled={positions[1] - positions[0]}\n          marks={marks}\n          size={size}\n          radius={radius}\n          color={color}\n          min={min}\n          max={max}\n          value={_value[1]}\n          styles={styles}\n          classNames={classNames}\n          onMouseEnter={showLabelOnHover ? () => setHovered(true) : undefined}\n          onMouseLeave={showLabelOnHover ? () => setHovered(false) : undefined}\n          onChange={(val) => {\n            const nearestValue = Math.abs(_value[0] - val) > Math.abs(_value[1] - val) ? 1 : 0;\n            const clone: Value = [..._value];\n            clone[nearestValue] = val;\n            _setValue(clone);\n          }}\n          disabled={disabled}\n        >\n          <Thumb\n            {...sharedThumbProps}\n            value={_value[0]}\n            position={positions[0]}\n            dragging={active}\n            label={typeof label === 'function' ? label(_value[0]) : label}\n            ref={(node) => {\n              thumbs.current[0] = node;\n            }}\n            thumbLabel={thumbFromLabel}\n            onMouseDown={(event) => handleThumbMouseDown(event, 0)}\n            onFocus={() => setFocused(0)}\n            showLabelOnHover={showLabelOnHover && hovered}\n            disabled={disabled}\n          >\n            {hasArrayThumbChildren ? thumbChildren[0] : thumbChildren}\n          </Thumb>\n\n          <Thumb\n            {...sharedThumbProps}\n            thumbLabel={thumbToLabel}\n            value={_value[1]}\n            position={positions[1]}\n            dragging={active}\n            label={typeof label === 'function' ? label(_value[1]) : label}\n            ref={(node) => {\n              thumbs.current[1] = node;\n            }}\n            onMouseDown={(event) => handleThumbMouseDown(event, 1)}\n            onFocus={() => setFocused(1)}\n            showLabelOnHover={showLabelOnHover && hovered}\n            disabled={disabled}\n          >\n            {hasArrayThumbChildren ? thumbChildren[1] : thumbChildren}\n          </Thumb>\n        </Track>\n\n        <input type=\"hidden\" name={`${name}_from`} value={_value[0]} />\n        <input type=\"hidden\" name={`${name}_to`} value={_value[1]} />\n      </SliderRoot>\n    );\n  }\n);\n\nRangeSlider.displayName = '@mantine/core/RangeSlider';\n"]},"metadata":{},"sourceType":"module"}