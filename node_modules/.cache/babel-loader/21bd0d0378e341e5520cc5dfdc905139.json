{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nimport { DEFAULT_THEME } from './default-theme.js';\nimport { GlobalStyles } from './GlobalStyles.js';\nimport { MantineCssVariables } from './MantineCssVariables.js';\nimport { mergeThemeWithFunctions } from './utils/merge-theme/merge-theme.js';\nimport { filterProps } from './utils/filter-props/filter-props.js';\nimport { NormalizeCSS } from './NormalizeCSS.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nconst MantineProviderContext = createContext({\n  theme: DEFAULT_THEME,\n  styles: {},\n  classNames: {},\n  emotionOptions: {\n    key: \"mantine\",\n    prepend: true\n  },\n  defaultProps: {}\n});\n\nfunction useMantineTheme() {\n  var _a;\n\n  return ((_a = useContext(MantineProviderContext)) == null ? void 0 : _a.theme) || DEFAULT_THEME;\n}\n\nfunction useMantineThemeStyles(component) {\n  const ctx = useContext(MantineProviderContext);\n  return {\n    styles: ctx.styles[component] || {},\n    classNames: ctx.classNames[component] || {}\n  };\n}\n\nfunction useMantineEmotionOptions() {\n  var _a;\n\n  return ((_a = useContext(MantineProviderContext)) == null ? void 0 : _a.emotionOptions) || {\n    key: \"mantine\",\n    prepend: true\n  };\n}\n\nfunction useMantineDefaultProps(component, defaultProps, props) {\n  var _a, _b;\n\n  const contextProps = ((_b = (_a = useContext(MantineProviderContext)) == null ? void 0 : _a.defaultProps) == null ? void 0 : _b[component]) || {};\n  return __spreadValues(__spreadValues(__spreadValues({}, defaultProps), contextProps), filterProps(props));\n}\n\nfunction MantineProvider(_ref) {\n  let {\n    theme,\n    styles = {},\n    classNames = {},\n    defaultProps = {},\n    emotionOptions,\n    withNormalizeCSS = false,\n    withGlobalStyles = false,\n    withCSSVariables = false,\n    inherit = false,\n    children\n  } = _ref;\n  const ctx = useContext(MantineProviderContext);\n  const overrides = {\n    themeOverride: inherit ? __spreadValues(__spreadValues({}, ctx.theme), theme) : theme,\n    emotionOptions: inherit ? __spreadValues(__spreadValues({}, ctx.emotionOptions), emotionOptions) : emotionOptions,\n    styles: inherit ? __spreadValues(__spreadValues({}, ctx.styles), styles) : styles,\n    classNames: inherit ? __spreadValues(__spreadValues({}, ctx.classNames), classNames) : classNames,\n    defaultProps: inherit ? __spreadValues(__spreadValues({}, ctx.defaultProps), defaultProps) : defaultProps\n  };\n  const mergedTheme = mergeThemeWithFunctions(DEFAULT_THEME, overrides.themeOverride);\n  return /* @__PURE__ */React.createElement(MantineProviderContext.Provider, {\n    value: {\n      theme: mergedTheme,\n      styles: overrides.styles,\n      classNames: overrides.classNames,\n      emotionOptions: overrides.emotionOptions,\n      defaultProps: overrides.defaultProps\n    }\n  }, withNormalizeCSS && /* @__PURE__ */React.createElement(NormalizeCSS, null), withGlobalStyles && /* @__PURE__ */React.createElement(GlobalStyles, {\n    theme: mergedTheme\n  }), withCSSVariables && /* @__PURE__ */React.createElement(MantineCssVariables, {\n    theme: mergedTheme\n  }), children);\n}\n\nMantineProvider.displayName = \"@mantine/core/MantineProvider\";\nexport { MantineProvider, useMantineDefaultProps, useMantineEmotionOptions, useMantineTheme, useMantineThemeStyles };","map":{"version":3,"sources":["../../src/theme/MantineProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { createContext, useContext } from 'react';\nimport type { Options as EmotionCacheOptions } from '@emotion/cache';\nimport { DEFAULT_THEME } from './default-theme';\nimport { GlobalStyles } from './GlobalStyles';\nimport { MantineCssVariables } from './MantineCssVariables';\nimport type { MantineThemeOverride, MantineTheme } from './types';\nimport type { CSSObject } from '../tss';\nimport { mergeThemeWithFunctions } from './utils/merge-theme/merge-theme';\nimport { filterProps } from './utils/filter-props/filter-props';\nimport { NormalizeCSS } from './NormalizeCSS';\n\ntype ProviderStyles = Record<\n  string,\n  Record<string, CSSObject> | ((theme: MantineTheme, params: any) => Record<string, CSSObject>)\n>;\n\ntype ProviderClassNames = Record<string, Record<string, string>>;\ntype MantineDefaultProps = Record<string, Record<string, any>>;\n\ninterface MantineProviderContextType {\n  theme: MantineTheme;\n  styles: ProviderStyles;\n  classNames: ProviderClassNames;\n  emotionOptions: EmotionCacheOptions;\n  defaultProps: MantineDefaultProps;\n}\n\nconst MantineProviderContext = createContext<MantineProviderContextType>({\n  theme: DEFAULT_THEME,\n  styles: {},\n  classNames: {},\n  emotionOptions: { key: 'mantine', prepend: true },\n  defaultProps: {},\n});\n\nexport function useMantineTheme() {\n  return useContext(MantineProviderContext)?.theme || DEFAULT_THEME;\n}\n\nexport function useMantineThemeStyles(component: string) {\n  const ctx = useContext(MantineProviderContext);\n  return { styles: ctx.styles[component] || {}, classNames: ctx.classNames[component] || {} };\n}\n\nexport function useMantineEmotionOptions(): EmotionCacheOptions {\n  return useContext(MantineProviderContext)?.emotionOptions || { key: 'mantine', prepend: true };\n}\n\nexport function useMantineDefaultProps<T extends Record<string, any>>(\n  component: string,\n  defaultProps: Partial<T>,\n  props: T\n): T {\n  const contextProps = useContext(MantineProviderContext)?.defaultProps?.[component] || {};\n  return { ...defaultProps, ...contextProps, ...filterProps(props) };\n}\n\nexport interface MantineProviderProps {\n  theme?: MantineThemeOverride;\n  styles?: ProviderStyles;\n  classNames?: ProviderClassNames;\n  defaultProps?: MantineDefaultProps;\n  emotionOptions?: EmotionCacheOptions;\n  withNormalizeCSS?: boolean;\n  withGlobalStyles?: boolean;\n  withCSSVariables?: boolean;\n  children: React.ReactNode;\n  inherit?: boolean;\n}\n\nexport function MantineProvider({\n  theme,\n  styles = {},\n  classNames = {},\n  defaultProps = {},\n  emotionOptions,\n  withNormalizeCSS = false,\n  withGlobalStyles = false,\n  withCSSVariables = false,\n  inherit = false,\n  children,\n}: MantineProviderProps) {\n  const ctx = useContext(MantineProviderContext);\n  const overrides = {\n    themeOverride: inherit ? { ...ctx.theme, ...theme } : theme,\n    emotionOptions: inherit ? { ...ctx.emotionOptions, ...emotionOptions } : emotionOptions,\n    styles: inherit ? { ...ctx.styles, ...styles } : styles,\n    classNames: inherit ? { ...ctx.classNames, ...classNames } : classNames,\n    defaultProps: inherit ? { ...ctx.defaultProps, ...defaultProps } : defaultProps,\n  };\n\n  const mergedTheme = mergeThemeWithFunctions(DEFAULT_THEME, overrides.themeOverride);\n\n  return (\n    <MantineProviderContext.Provider\n      value={{\n        theme: mergedTheme,\n        styles: overrides.styles,\n        classNames: overrides.classNames,\n        emotionOptions: overrides.emotionOptions,\n        defaultProps: overrides.defaultProps,\n      }}\n    >\n      {withNormalizeCSS && <NormalizeCSS />}\n      {withGlobalStyles && <GlobalStyles theme={mergedTheme} />}\n      {withCSSVariables && <MantineCssVariables theme={mergedTheme} />}\n      {children}\n    </MantineProviderContext.Provider>\n  );\n}\n\nMantineProvider.displayName = '@mantine/core/MantineProvider';\n"]},"metadata":{},"sourceType":"module"}