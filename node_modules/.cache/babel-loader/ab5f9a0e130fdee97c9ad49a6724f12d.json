{"ast":null,"code":"var _jsxFileName = \"/media/haris/167d74dd-415c-4b8f-9af8-e38f039cf8e7/React js/portfolio-temp/src/components/sections/FeaturesSplit.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { SectionSplitProps } from '../../utils/SectionProps';\nimport SectionHeader from './partials/SectionHeader';\nimport Image from '../elements/Image';\nimport { ThemeIcon, RingProgress, Text, Center } from '@mantine/core'; // import { Check } from 'tabler-icons-react';\n\nconst propTypes = { ...SectionSplitProps.types\n};\nconst defaultProps = { ...SectionSplitProps.defaults\n};\n\nconst FeaturesSplit = _ref => {\n  let {\n    className,\n    topOuterDivider,\n    bottomOuterDivider,\n    topDivider,\n    bottomDivider,\n    hasBgColor,\n    invertColor,\n    invertMobile,\n    invertDesktop,\n    alignTop,\n    imageFill,\n    ...props\n  } = _ref;\n  const [progress, setProgress] = React.useState(10);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 0 : prevProgress + 10);\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  const outerClasses = classNames('features-split section', topOuterDivider && 'has-top-divider', bottomOuterDivider && 'has-bottom-divider', hasBgColor && 'has-bg-color', invertColor && 'invert-color', className);\n  const innerClasses = classNames('features-split-inner section-inner', topDivider && 'has-top-divider', bottomDivider && 'has-bottom-divider');\n  const splitClasses = classNames('split-wrap', invertMobile && 'invert-mobile', invertDesktop && 'invert-desktop', alignTop && 'align-top');\n  const sectionHeader = {\n    title: 'Workflow that just works',\n    paragraph: 'Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum â€” semper quis lectus nulla at volutpat diam ut venenatis.'\n  }; // const percentage = 50;\n\n  return /*#__PURE__*/React.createElement(\"section\", Object.assign({}, props, {\n    className: outerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: '1px solid red',\n      alignContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center',\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(RingProgress, {\n    sections: [{\n      value: 40,\n      color: '#5658DD'\n    }],\n    label: /*#__PURE__*/React.createElement(Text, {\n      color: \"#5658DD\",\n      weight: 700,\n      align: \"center\",\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"40%\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"dsajhsagd\")), /*#__PURE__*/React.createElement(RingProgress, {\n    sections: [{\n      value: 40,\n      color: '#5658DD'\n    }],\n    label: /*#__PURE__*/React.createElement(Text, {\n      color: \"#5658DD\",\n      weight: 700,\n      align: \"center\",\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"40%\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(RingProgress, {\n    sections: [{\n      value: 40,\n      color: '#5658DD'\n    }],\n    label: /*#__PURE__*/React.createElement(Text, {\n      color: \"#5658DD\",\n      weight: 700,\n      align: \"center\",\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"40%\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(RingProgress, {\n    sections: [{\n      value: 40,\n      color: '#5658DD'\n    }],\n    label: /*#__PURE__*/React.createElement(Text, {\n      color: \"#5658DD\",\n      weight: 700,\n      align: \"center\",\n      size: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"40%\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })));\n};\n\nFeaturesSplit.propTypes = propTypes;\nFeaturesSplit.defaultProps = defaultProps;\nexport default FeaturesSplit;","map":{"version":3,"sources":["/media/haris/167d74dd-415c-4b8f-9af8-e38f039cf8e7/React js/portfolio-temp/src/components/sections/FeaturesSplit.js"],"names":["React","classNames","SectionSplitProps","SectionHeader","Image","ThemeIcon","RingProgress","Text","Center","propTypes","types","defaultProps","defaults","FeaturesSplit","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","invertMobile","invertDesktop","alignTop","imageFill","props","progress","setProgress","useState","useEffect","timer","setInterval","prevProgress","clearInterval","outerClasses","innerClasses","splitClasses","sectionHeader","title","paragraph","display","justifyContent","border","alignContent","alignItems","textAlign","alignSelf","value","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { SectionSplitProps } from '../../utils/SectionProps';\nimport SectionHeader from './partials/SectionHeader';\nimport Image from '../elements/Image';\nimport { ThemeIcon, RingProgress, Text, Center } from '@mantine/core';\n// import { Check } from 'tabler-icons-react';\n\n\n\nconst propTypes = {\n  ...SectionSplitProps.types\n}\n\nconst defaultProps = {\n  ...SectionSplitProps.defaults\n}\n\nconst FeaturesSplit = ({\n  className,\n  topOuterDivider,\n  bottomOuterDivider,\n  topDivider,\n  bottomDivider,\n  hasBgColor,\n  invertColor,\n  invertMobile,\n  invertDesktop,\n  alignTop,\n  imageFill,\n  ...props\n}) => {\n\n  const [progress, setProgress] = React.useState(10);\n\n   React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const outerClasses = classNames(\n    'features-split section',\n    topOuterDivider && 'has-top-divider',\n    bottomOuterDivider && 'has-bottom-divider',\n    hasBgColor && 'has-bg-color',\n    invertColor && 'invert-color',\n    className\n  );\n\n  const innerClasses = classNames(\n    'features-split-inner section-inner',\n    topDivider && 'has-top-divider',\n    bottomDivider && 'has-bottom-divider'\n  );\n\n  const splitClasses = classNames(\n    'split-wrap',\n    invertMobile && 'invert-mobile',\n    invertDesktop && 'invert-desktop',\n    alignTop && 'align-top'\n  );\n\n  const sectionHeader = {\n    title: 'Workflow that just works',\n    paragraph: 'Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum â€” semper quis lectus nulla at volutpat diam ut venenatis.'\n  };\n  // const percentage = 50;\n\n\n  return (\n    <section\n      {...props}\n      className={outerClasses}\n    >\n\n\n      <div className=\"container\" style={{display:'flex',justifyContent:'space-around'}}  >\n      \n<div style={{border:'1px solid red',alignContent:'center',alignItems:'center',textAlign:'center',alignSelf:'center'}}>\n\n              <RingProgress\n        sections={[{ value: 40, color: '#5658DD' }]}\n        label={\n          <Text color=\"#5658DD\" weight={700} align=\"center\" size=\"xl\">\n            40%\n          </Text>\n        }\n        />\n\n        <h1>\n          dsajhsagd\n        </h1>\n        </div>\n         <RingProgress\n        sections={[{ value: 40, color: '#5658DD' }]}\n        label={\n          <Text color=\"#5658DD\" weight={700} align=\"center\" size=\"xl\">\n            40%\n          </Text>\n        }\n      />\n\n         <RingProgress\n        sections={[{ value: 40, color: '#5658DD' }]}\n        label={\n          <Text color=\"#5658DD\" weight={700} align=\"center\" size=\"xl\">\n            40%\n          </Text>\n        }\n      />\n        <RingProgress\n        sections={[{ value: 40, color: '#5658DD' }]}\n        label={\n          <Text color=\"#5658DD\" weight={700} align=\"center\" size=\"xl\">\n            40%\n          </Text>\n        }\n      />\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        {/* <div style={{ width: 150, }}>\n\n          <CircularProgressbar\n            value={percentage}\n            text={`${percentage}%`}\n            styles={{\n              // Customize the root svg element\n              root: {},\n              // Customize the path, i.e. the \"completed progress\"\n              path: {\n                // Path color\n                stroke: `rgba(62, 152, 199, ${percentage / 100})`,\n                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                strokeLinecap: 'butt',\n                // Customize transition animation\n                transition: 'stroke-dashoffset 0.9s ease 0s',\n                // Rotate the path\n                // transform: 'rotate(0.25turn)',\n                transformOrigin: 'center center',\n              },\n              // Customize the circle behind the path, i.e. the \"total progress\"\n              trail: {\n                // Trail color\n                stroke: '#d6d6d6',\n                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                strokeLinecap: 'butt',\n                // Rotate the trail\n                transform: 'rotate(0.25turn)',\n                transformOrigin: 'center center',\n              },\n              // Customize the text\n              text: {\n                // Text color\n                fill: '#f88',\n                // Text size\n                fontSize: '10px',\n                textAlign: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n                alignItems: 'center',\n                alignSelf: 'center',\n                padding:1000,\n                margin:50,\n                border:'2px solid red'\n              },\n              // Customize background - only used when the `background` prop is true\n              background: {\n                // fill: '#3e98c7',\n              },\n            }}\n          />\n        </div>\n\n         <div style={{ width: 100 }}>\n\n          <CircularProgressbar\n            value={percentage}\n            text={`${percentage}%`}\n            styles={{\n              // Customize the root svg element\n              root: {},\n              // Customize the path, i.e. the \"completed progress\"\n              path: {\n                // Path color\n                stroke: `rgba(62, 152, 199, ${percentage / 100})`,\n                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                strokeLinecap: 'butt',\n                // Customize transition animation\n                transition: 'stroke-dashoffset 0.5s ease 0s',\n                // Rotate the path\n                // transform: 'rotate(0.25turn)',\n                transformOrigin: 'center center',\n              },\n              // Customize the circle behind the path, i.e. the \"total progress\"\n              trail: {\n                // Trail color\n                stroke: '#d6d6d6',\n                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                strokeLinecap: 'butt',\n                // Rotate the trail\n                transform: 'rotate(0.25turn)',\n                transformOrigin: 'center center',\n              },\n              // Customize the text\n              text: {\n                // Text color\n                fill: '#f88',\n                // Text size\n                fontSize: '16px',\n                textAlign: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n                alignItems: 'center',\n                alignSelf: 'center'\n              },\n              // Customize background - only used when the `background` prop is true\n              background: {\n                fill: '#3e98c7',\n              },\n            }}\n          />\n        </div> */}\n        {/* <div className={innerClasses}>\n          <SectionHeader data={sectionHeader} className=\"center-content\" />\n          <div className={splitClasses}>\n\n            <div className=\"split-item\">\n              <div className=\"split-item-content center-content-mobile reveal-from-left\" data-reveal-container=\".split-item\">\n                <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\n                  Lightning fast workflow\n                  </div>\n                <h3 className=\"mt-0 mb-12\">\n                  Data-driven insights\n                  </h3>\n                <p className=\"m-0\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua â€” Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                  </p>\n              </div>\n              <div className={\n                classNames(\n                  'split-item-image center-content-mobile reveal-from-bottom',\n                  imageFill && 'split-item-image-fill'\n                )}\n                data-reveal-container=\".split-item\">\n                <Image\n                  src={require('./../../assets/images/features-split-image-01.png')}\n                  alt=\"Features split 01\"\n                  width={528}\n                  height={396} />\n              </div>\n            </div>\n\n            <div className=\"split-item\">\n              <div className=\"split-item-content center-content-mobile reveal-from-right\" data-reveal-container=\".split-item\">\n                <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\n                  Lightning fast workflow\n                  </div>\n                <h3 className=\"mt-0 mb-12\">\n                  Data-driven insights\n                  </h3>\n                <p className=\"m-0\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua â€” Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                  </p>\n              </div>\n              <div className={\n                classNames(\n                  'split-item-image center-content-mobile reveal-from-bottom',\n                  imageFill && 'split-item-image-fill'\n                )}\n                data-reveal-container=\".split-item\">\n                <Image\n                  src={require('./../../assets/images/features-split-image-02.png')}\n                  alt=\"Features split 02\"\n                  width={528}\n                  height={396} />\n              </div>\n            </div>\n\n            <div className=\"split-item\">\n              <div className=\"split-item-content center-content-mobile reveal-from-left\" data-reveal-container=\".split-item\">\n                <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\n                  Lightning fast workflow\n                  </div>\n                <h3 className=\"mt-0 mb-12\">\n                  Data-driven insights\n                  </h3>\n                <p className=\"m-0\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua â€” Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                  </p>\n              </div>\n              <div className={\n                classNames(\n                  'split-item-image center-content-mobile reveal-from-bottom',\n                  imageFill && 'split-item-image-fill'\n                )}\n                data-reveal-container=\".split-item\">\n                <Image\n                  src={require('./../../assets/images/features-split-image-03.png')}\n                  alt=\"Features split 03\"\n                  width={528}\n                  height={396} />\n              </div>\n            </div>\n\n          </div>\n        </div> */}\n      </div>\n    </section>\n  );\n}\n\nFeaturesSplit.propTypes = propTypes;\nFeaturesSplit.defaultProps = defaultProps;\n\nexport default FeaturesSplit;"]},"metadata":{},"sourceType":"module"}