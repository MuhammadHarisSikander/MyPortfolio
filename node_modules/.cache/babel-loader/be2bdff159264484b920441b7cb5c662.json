{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    fluid,\n    size,\n    sizes\n  } = _ref;\n  return {\n    root: {\n      maxWidth: fluid ? \"100%\" : theme.fn.size({\n        size,\n        sizes\n      }),\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../../src/components/Container/Container.styles.ts"],"names":[],"mappings":";AACA,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD;AAAA,MAAQ;AAAE,IAAA,KAAF;AAAS,IAAA,IAAT;AAAe,IAAA;AAAf,GAAR;AAAA,SAAoC;AAC9D,IAAA,IAAI,EAAE;AACJ,MAAA,QAAQ,EAAE,KAAK,GAAG,MAAH,GAAY,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,QAAA,IAAF;AAAQ,QAAA;AAAR,OAAd,CADvB;AAEJ,MAAA,UAAU,EAAE,MAFR;AAGJ,MAAA,WAAW,EAAE;AAHT;AADwD,GAApC;AAAA,CAAD,CAA3B","sourcesContent":["import { createStyles, MantineNumberSize, MantineSize } from '@mantine/styles';\n\nexport interface ContainerStylesParams {\n  fluid: boolean;\n  size: MantineNumberSize;\n  sizes: Record<MantineSize, number>;\n}\n\nexport default createStyles((theme, { fluid, size, sizes }: ContainerStylesParams) => ({\n  root: {\n    maxWidth: fluid ? '100%' : theme.fn.size({ size, sizes }),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}