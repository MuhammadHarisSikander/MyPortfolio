{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useMantineDefaultProps } from '@mantine/styles';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Center = forwardRef((props, ref) => {\n  const _a = useMantineDefaultProps(\"Center\", {}, props),\n        {\n    inline,\n    sx\n  } = _a,\n        others = __objRest(_a, [\"inline\", \"sx\"]);\n\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    ref,\n    sx: [{\n      display: inline ? \"inline-flex\" : \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }, ...(Array.isArray(sx) ? sx : [sx])]\n  }, others));\n});\nCenter.displayName = \"@mantine/core/Center\";\nexport { Center };","map":{"version":3,"sources":["../../../src/components/Center/Center.tsx"],"names":[],"mappings":";;;AAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAvB;AACA,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAjC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,cAApC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,oBAApC;;AACA,IAAI,eAAe,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,KAAqB,GAAG,IAAI,GAAP,GAAa,SAAS,CAAC,GAAD,EAAM,GAAN,EAAW;AAAE,EAAA,UAAU,EAAE,IAAd;AAAoB,EAAA,YAAY,EAAE,IAAlC;AAAwC,EAAA,QAAQ,EAAE,IAAlD;AAAwD,EAAA;AAAxD,CAAX,CAAtB,GAAoG,GAAG,CAAC,GAAD,CAAH,GAAW,KAA1J;;AACA,IAAI,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,KAAU;AAC7B,OAAK,IAAI,IAAT,IAAiB,CAAC,KAAK,CAAC,GAAG,EAAT,CAAlB,EACE,IAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;;AACJ,MAAI,mBAAJ,EACE,KAAK,IAAI,IAAT,IAAiB,mBAAmB,CAAC,CAAD,CAApC,EAAyC;AACvC,QAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;AACH;AACH,SAAO,CAAP;AACD,CAVD;;AAWA,IAAI,SAAS,GAAG,CAAC,MAAD,EAAS,OAAT,KAAqB;AACnC,MAAI,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI,IAAT,IAAiB,MAAjB,EACE,IAAI,YAAY,CAAC,IAAb,CAAkB,MAAlB,EAA0B,IAA1B,KAAmC,OAAO,CAAC,OAAR,CAAgB,IAAhB,IAAwB,CAA/D,EACE,MAAM,CAAC,IAAD,CAAN,GAAe,MAAM,CAAC,IAAD,CAArB;;AACJ,MAAI,MAAM,IAAI,IAAV,IAAkB,mBAAtB,EACE,KAAK,IAAI,IAAT,IAAiB,mBAAmB,CAAC,MAAD,CAApC,EAA8C;AAC5C,QAAI,OAAO,CAAC,OAAR,CAAgB,IAAhB,IAAwB,CAAxB,IAA6B,YAAY,CAAC,IAAb,CAAkB,MAAlB,EAA0B,IAA1B,CAAjC,EACE,MAAM,CAAC,IAAD,CAAN,GAAe,MAAM,CAAC,IAAD,CAArB;AACH;AACH,SAAO,MAAP;AACD,CAXD;;AAiBY,MAAC,MAAM,GAAG,UAAU,CAAC,CAAC,KAAD,EAAQ,GAAR,KAAgB;AAC/C,QAAM,EAAE,GAAG,sBAAsB,CAAC,QAAD,EAAW,EAAX,EAAe,KAAf,CAAjC;AAAA,QAAwD;AAAE,IAAA,MAAF;AAAU,IAAA;AAAV,MAAiB,EAAzE;AAAA,QAA6E,MAAM,GAAG,SAAS,CAAC,EAAD,EAAK,CAAC,QAAD,EAAW,IAAX,CAAL,CAA/F;;AACA,SAAA,eAAuB,KAAK,CAAC,aAAN,CAAoB,GAApB,EAAyB,cAAc,CAAC;AAC7D,IAAA,GAD6D;AAE7D,IAAA,EAAE,EAAE,CACF;AACE,MAAA,OAAO,EAAE,MAAM,GAAG,aAAH,GAAmB,MADpC;AAEE,MAAA,UAAU,EAAE,QAFd;AAGE,MAAA,cAAc,EAAE;AAHlB,KADE,EAMF,IAAG,KAAK,CAAC,OAAN,CAAc,EAAd,IAAoB,EAApB,GAAyB,CAAC,EAAD,CAA5B,CANE;AAFyD,GAAD,EAU3D,MAV2D,CAAvC,CAAvB;AAWD,CAb+B,CAApB;AAcZ,MAAM,CAAC,WAAP,GAAqB,sBAArB","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  PolymorphicComponentProps,\n  PolymorphicRef,\n  useMantineDefaultProps,\n} from '@mantine/styles';\nimport { Box } from '../Box';\n\nexport interface _CenterProps extends DefaultProps {\n  /** Content that should be centered vertically and horizontally */\n  children: React.ReactNode;\n\n  /** Set to true to use inline-flex instead of flex */\n  inline?: boolean;\n}\n\nexport type CenterProps<C> = PolymorphicComponentProps<C, _CenterProps>;\n\ntype CenterComponent = (<C = 'div'>(props: CenterProps<C>) => React.ReactElement) & {\n  displayName?: string;\n};\n\nexport const Center: CenterComponent = forwardRef(\n  (props: CenterProps<'div'>, ref: PolymorphicRef<'div'>) => {\n    const { inline, sx, ...others } = useMantineDefaultProps('Center', {}, props);\n    return (\n      <Box\n        ref={ref}\n        sx={[\n          {\n            display: inline ? 'inline-flex' : 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n          ...(Array.isArray(sx) ? sx : [sx]),\n        ]}\n        {...others}\n      />\n    );\n  }\n) as any;\n\nCenter.displayName = '@mantine/core/Center';\n"]},"metadata":{},"sourceType":"module"}