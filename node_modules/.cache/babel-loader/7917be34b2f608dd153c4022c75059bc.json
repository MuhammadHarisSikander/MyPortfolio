{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\n\nfunction serializeJSON(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error(\"@mantine/hooks use-local-storage: Failed to serialize the value\");\n  }\n}\n\nfunction deserializeJSON(value) {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n}\n\nfunction useLocalStorage(_ref) {\n  let {\n    key,\n    defaultValue = void 0,\n    getInitialValueInEffect = false,\n    deserialize = deserializeJSON,\n    serialize = serializeJSON\n  } = _ref;\n\n  var _a;\n\n  const [value, setValue] = useState(typeof window !== \"undefined\" && \"localStorage\" in window && !getInitialValueInEffect ? deserialize((_a = window.localStorage.getItem(key)) != null ? _a : void 0) : defaultValue != null ? defaultValue : \"\");\n  const setLocalStorageValue = useCallback(val => {\n    if (val instanceof Function) {\n      setValue(current => {\n        const result = val(current);\n        window.localStorage.setItem(key, serialize(result));\n        return result;\n      });\n    } else {\n      window.localStorage.setItem(key, serialize(val));\n      setValue(val);\n    }\n  }, [key]);\n  useWindowEvent(\"storage\", event => {\n    var _a2;\n\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(deserialize((_a2 = event.newValue) != null ? _a2 : void 0));\n    }\n  });\n  useEffect(() => {\n    if (defaultValue !== void 0 && value === void 0) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n  useEffect(() => {\n    var _a2;\n\n    if (getInitialValueInEffect) {\n      setValue(deserialize((_a2 = window.localStorage.getItem(key)) != null ? _a2 : void 0) || (defaultValue != null ? defaultValue : \"\"));\n    }\n  }, []);\n  return [value === void 0 ? defaultValue : value, setLocalStorageValue];\n}\n\nconst useLocalStorageValue = useLocalStorage;\nexport { useLocalStorage, useLocalStorageValue };","map":{"version":3,"sources":["../../src/use-local-storage/use-local-storage.ts"],"names":[],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface UseLocalStorage<T> {\n  /** Local storage key */\n  key: string;\n\n  /** Default value that will be set if value is not found in local storage */\n  defaultValue?: T;\n\n  /** If set to true, value will be update is useEffect after mount */\n  getInitialValueInEffect?: boolean;\n\n  /** Function to serialize value into string to be save in local storage */\n  serialize?(value: T): string;\n\n  /** Function to deserialize string value from local storage to value */\n  deserialize?(value: string): T;\n}\n\nfunction serializeJSON<T>(value: T) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error('@mantine/hooks use-local-storage: Failed to serialize the value');\n  }\n}\n\nfunction deserializeJSON(value: string) {\n  try {\n    return JSON.parse(value);\n  } catch {\n    return value;\n  }\n}\n\nexport function useLocalStorage<T = string>({\n  key,\n  defaultValue = undefined,\n  getInitialValueInEffect = false,\n  deserialize = deserializeJSON,\n  serialize = serializeJSON,\n}: UseLocalStorage<T>) {\n  const [value, setValue] = useState<T>(\n    typeof window !== 'undefined' && 'localStorage' in window && !getInitialValueInEffect\n      ? deserialize(window.localStorage.getItem(key) ?? undefined)\n      : ((defaultValue ?? '') as T)\n  );\n\n  const setLocalStorageValue = useCallback(\n    (val: T | ((prevState: T) => T)) => {\n      if (val instanceof Function) {\n        setValue((current) => {\n          const result = val(current);\n          window.localStorage.setItem(key, serialize(result));\n          return result;\n        });\n      } else {\n        window.localStorage.setItem(key, serialize(val));\n        setValue(val);\n      }\n    },\n    [key]\n  );\n\n  useWindowEvent('storage', (event) => {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(deserialize(event.newValue ?? undefined));\n    }\n  });\n\n  useEffect(() => {\n    if (defaultValue !== undefined && value === undefined) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n\n  useEffect(() => {\n    if (getInitialValueInEffect) {\n      setValue(\n        deserialize(window.localStorage.getItem(key) ?? undefined) || ((defaultValue ?? '') as T)\n      );\n    }\n  }, []);\n\n  return [value === undefined ? defaultValue : value, setLocalStorageValue] as const;\n}\n\nexport const useLocalStorageValue = useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}